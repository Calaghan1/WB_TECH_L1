// Разработать программу, которая будет последовательно отправлять значения в канал,
//  а с другой стороны канала — читать. По истечению N секунд программа должна завершаться.


package main
import (
	"time"
	"fmt"
)
func Exercise_5() {
	// Создаем канал для обмена данными
	ch := make(chan int)

	// Запускаем горутину для чтения из канала
	go func() {
		for {
			select {
			case val := <-ch:
				fmt.Printf("Received: %d\n", val)
			}
		}
	}()

	// Запускаем горутину для отправки значений в канал
	go func() {
		for i := 1; i <= 10; i++ {
			ch <- i
			time.Sleep(time.Second) // Ожидаем 1 секунду
		}
		close(ch) // Закрываем канал после отправки всех значений
	}()

	// Ждем N секунд (в данном случае 5 секунд) перед завершением программы
	time.Sleep(5 * time.Second)
}